<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign In - TaskFlow</title>
    <link rel="stylesheet" href="/css/elegant-styles.css" />
    <style>
      /* Ensure single page fit */
      body {
        height: 100vh;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
      }
      
      .login-container {
        width: 100%;
        max-width: 450px;
        height: 100vh;
        max-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        overflow-y: auto;
        scrollbar-width: none;
        -ms-overflow-style: none;
      }
      
      .login-container::-webkit-scrollbar {
        display: none;
      }
      
      .floating-message {
        position: fixed;
        top: 2rem;
        right: 2rem;
        background: rgba(15, 15, 26, 0.95);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--radius-xl);
        padding: var(--space-4) var(--space-6);
        color: var(--dark-text);
        font-weight: 600;
        box-shadow: var(--shadow-2xl), var(--shadow-glow);
        transform: translateX(400px);
        transition: all var(--transition-bounce);
        z-index: var(--z-toast);
        max-width: 320px;
      }
      
      .floating-message.show {
        transform: translateX(0);
      }
      
      .floating-message.success {
        border-color: rgba(16, 185, 129, 0.4);
        box-shadow: var(--shadow-2xl), 0 0 30px rgba(16, 185, 129, 0.3);
      }
      
      .floating-message.error {
        border-color: rgba(239, 68, 68, 0.4);
        box-shadow: var(--shadow-2xl), 0 0 30px rgba(239, 68, 68, 0.3);
      }
      
      .floating-message.info {
        border-color: rgba(59, 130, 246, 0.4);
        box-shadow: var(--shadow-2xl), 0 0 30px rgba(59, 130, 246, 0.3);
      }
      
      .feature-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: var(--space-3);
        margin-top: var(--space-5);
      }
      
      .feature-card {
        background: rgba(26, 26, 46, 0.4);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: var(--radius-lg);
        padding: var(--space-3);
        text-align: center;
        transition: all var(--transition-normal);
        position: relative;
        overflow: hidden;
      }
      
      .feature-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
        transition: left var(--transition-slow);
      }
      
      .feature-card:hover::before {
        left: 100%;
      }
      
      .feature-card:hover {
        transform: translateY(-2px) scale(1.02);
        border-color: rgba(59, 130, 246, 0.3);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15), 0 0 20px rgba(59, 130, 246, 0.2);
      }
      
      .compact-form {
        padding: var(--space-8);
      }
      
      .compact-form .form-group {
        margin-bottom: var(--space-5);
      }
      
      .compact-form .form-input {
        padding: var(--space-4) var(--space-5);
        font-size: 1rem;
      }
      
      .compact-form .input-group .form-input {
        padding-left: calc(var(--space-5) * 2.2);
      }
      
      .compact-form .input-icon {
        left: var(--space-5);
        font-size: 1.1rem;
      }
      
      .logo-header {
        text-align: center;
        margin-bottom: var(--space-6);
      }
      
      .logo-header .logo {
        width: 64px;
        height: 64px;
        font-size: 1.5rem;
        margin: 0 auto var(--space-4);
        background: var(--gradient-hologram);
        background-size: 200% 200%;
        animation: hologramShift 3s ease-in-out infinite;
      }
      
      .brand-text {
        font-family: var(--font-display);
        font-size: 2rem;
        font-weight: 800;
        background: var(--gradient-hologram);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: hologramShift 3s ease-in-out infinite;
        letter-spacing: 0.05em;
        margin-bottom: var(--space-2);
      }
      
      .subtitle {
        font-size: 1rem;
        color: var(--dark-text-secondary);
        font-weight: 500;
      }
      
      .message-card {
        background: rgba(26, 26, 46, 0.6);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: var(--radius-lg);
        padding: var(--space-4);
        margin-bottom: var(--space-5);
        text-center;
        position: relative;
        overflow: hidden;
      }
      
      .message-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--primary-500), transparent);
      }
      
      .message-card.error {
        border-color: rgba(239, 68, 68, 0.3);
      }
      
      .message-card.error::before {
        background: linear-gradient(90deg, transparent, var(--error-500), transparent);
      }
      
      .message-card.success {
        border-color: rgba(16, 185, 129, 0.3);
      }
      
      .message-card.success::before {
        background: linear-gradient(90deg, transparent, var(--success-500), transparent);
      }
      
      .login-footer {
        text-align: center;
        margin-top: var(--space-5);
      }
      
      .login-footer .glass-card {
        padding: var(--space-4);
        border-radius: var(--radius-lg);
      }
      
      @media (max-height: 700px) {
        .login-container {
          padding: 0.5rem 0;
        }
        
        .compact-form {
          padding: var(--space-6);
        }
        
        .compact-form .form-group {
          margin-bottom: var(--space-4);
        }
        
        .logo-header .logo {
          width: 56px;
          height: 56px;
          font-size: 1.3rem;
          margin-bottom: var(--space-3);
        }
        
        .brand-text {
          font-size: 1.75rem;
          margin-bottom: var(--space-1);
        }
        
        .subtitle {
          font-size: 0.9rem;
        }
        
        .feature-grid {
          margin-top: var(--space-4);
          gap: var(--space-2);
        }
        
        .feature-card {
          padding: var(--space-2);
        }
      }
      
      @media (max-height: 600px) {
        .feature-grid {
          display: none;
        }
        
        .compact-form {
          padding: var(--space-4);
        }
        
        .compact-form .form-group {
          margin-bottom: var(--space-3);
        }
        
        .login-footer {
          margin-top: var(--space-3);
        }
      }
      
      .pulse-ring {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100px;
        height: 100px;
        border: 2px solid rgba(59, 130, 246, 0.3);
        border-radius: 50%;
        animation: pulseRing 2s ease-out infinite;
        pointer-events: none;
      }
      
      @keyframes pulseRing {
        0% {
          transform: translate(-50%, -50%) scale(0.8);
          opacity: 1;
        }
        100% {
          transform: translate(-50%, -50%) scale(2);
          opacity: 0;
        }
      }
    </style>
  </head>
  <body>
    
    <div class="login-container">
      <!-- Login Card -->
      <div class="glass-card animate-scale-in">
        <div class="compact-form">
          <!-- Logo Header -->
          <div class="logo-header">
            <div class="logo animate-float">
              <div class="pulse-ring"></div>
            </div>
            <h1 class="brand-text">Welcome Back</h1>
            <p class="subtitle">Sign in to TaskFlow</p>
          </div>

          <!-- Error/Success Messages -->
          <% if (message) { %>
          <div class="message-card error">
            <div class="flex items-center justify-center gap-3">
              <span class="text-2xl">‚ö†Ô∏è</span>
              <span class="text-danger font-medium"><%= message %></span>
            </div>
          </div>
          <% } %>

          <% if (success_msg) { %>
          <div class="message-card success">
            <div class="flex items-center justify-center gap-3">
              <span class="text-2xl">‚úÖ</span>
              <span class="text-success font-medium"><%= success_msg %></span>
            </div>
          </div>
          <% } %>

          <!-- Login Form -->
          <form action="/login" method="POST" class="space-y-6">
            <div class="form-group">
              <label for="username" class="form-label">
                Username
              </label>
              <div class="input-group">
                <div class="input-icon">üë§</div>
                <input
                  type="text"
                  id="username"
                  name="username"
                  required
                  class="form-input focus-ring"
                  placeholder="Enter your username"
                  autocomplete="username"
                />
              </div>
            </div>

            <div class="form-group">
              <label for="password" class="form-label">
                Password
              </label>
              <div class="input-group">
                <div class="input-icon">üîí</div>
                <input
                  type="password"
                  id="password"
                  name="password"
                  required
                  class="form-input focus-ring"
                  placeholder="Enter your password"
                  autocomplete="current-password"
                />
              </div>
            </div>

            <button type="submit" class="btn btn-primary btn-lg w-full hover-scale">
              <span>üöÄ</span> Sign In
            </button>
          </form>

          <!-- Register Link -->
          <div class="login-footer">
            <div class="glass-card">
              <p class="text-secondary">
                Don't have an account?
                <a href="/register" class="text-blue hover:text-blue-400 font-semibold ml-1 transition-colors">
                  Create one
                </a>
              </p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Features -->
      <div class="feature-grid animate-fade-in stagger-2">
        <div class="feature-card hover-lift">
          <div class="text-blue text-2xl mb-2">üõ°Ô∏è</div>
          <div class="text-xs text-secondary font-medium">Secure</div>
        </div>
        <div class="feature-card hover-lift">
          <div class="text-success text-2xl mb-2">‚ö°</div>
          <div class="text-xs text-secondary font-medium">Fast</div>
        </div>
        <div class="feature-card hover-lift">
          <div class="text-warning text-2xl mb-2">üåê</div>
          <div class="text-xs text-secondary font-medium">Global</div>
        </div>
      </div>
    </div>

    <!-- Floating Message Container -->
    <div id="floatingMessage" class="floating-message">
      <div class="flex items-center gap-3">
        <span id="messageIcon" class="text-xl"></span>
        <span id="messageText" class="text-sm"></span>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        
        function showFloatingMessage(message, type = 'info', icon = 'üí°', duration = 4000) {
          const floatingMessage = document.getElementById('floatingMessage');
          const messageIcon = document.getElementById('messageIcon');
          const messageText = document.getElementById('messageText');
          
          messageIcon.textContent = icon;
          messageText.textContent = message;
          
          floatingMessage.className = `floating-message ${type}`;
          floatingMessage.classList.add('show');
          
          setTimeout(() => {
            floatingMessage.classList.remove('show');
          }, duration);
        }
        
        // Enhanced form interactions
        const inputs = document.querySelectorAll('.form-input');
        inputs.forEach(input => {
          input.addEventListener('focus', function() {
            this.style.transform = 'scale(1.02)';
            this.style.borderColor = 'var(--primary-500)';
            this.style.boxShadow = '0 0 0 4px rgba(59, 130, 246, 0.15), var(--shadow-lg)';
            this.style.background = 'var(--dark-surface-2)';
            
            // Icon enhancement
            const icon = this.parentElement.querySelector('.input-icon');
            if (icon) {
              icon.style.color = 'var(--primary-500)';
              icon.style.transform = 'translateY(-50%) scale(1.1)';
            }
          });
          
          input.addEventListener('blur', function() {
            this.style.transform = 'scale(1)';
            this.style.borderColor = 'var(--dark-border)';
            this.style.boxShadow = 'var(--shadow-inner)';
            this.style.background = 'var(--dark-surface)';
            
            const icon = this.parentElement.querySelector('.input-icon');
            if (icon) {
              icon.style.color = 'var(--dark-text-muted)';
              icon.style.transform = 'translateY(-50%) scale(1)';
            }
          });
          
          // Typing effect
          input.addEventListener('input', function() {
            this.style.borderColor = 'var(--success-500)';
            setTimeout(() => {
              if (this === document.activeElement) {
                this.style.borderColor = 'var(--primary-500)';
              }
            }, 200);
          });
        });
        
        // Submit button enhancement
        const submitBtn = document.querySelector('button[type="submit"]');
        const form = document.querySelector('form');
        
        submitBtn.addEventListener('click', function(e) {
          this.style.transform = 'scale(0.98)';
          this.innerHTML = '<span>üîÑ</span> Signing In...';
          
          setTimeout(() => {
            this.style.transform = 'scale(1)';
          }, 150);
          
          showFloatingMessage('Authenticating...', 'info', 'üîê');
        });
        
        // Form validation
        form.addEventListener('submit', function(e) {
          const username = document.getElementById('username').value.trim();
          const password = document.getElementById('password').value;
          
          if (!username) {
            e.preventDefault();
            showFloatingMessage('Please enter your username', 'error', '‚ùå');
            document.getElementById('username').focus();
            return;
          }
          
          if (!password) {
            e.preventDefault();
            showFloatingMessage('Please enter your password', 'error', '‚ùå');
            document.getElementById('password').focus();
            return;
          }
          
          if (username.length < 3) {
            e.preventDefault();
            showFloatingMessage('Username must be at least 3 characters', 'error', '‚ùå');
            document.getElementById('username').focus();
            return;
          }
        });
        
        // Username input validation
        const usernameInput = document.getElementById('username');
        usernameInput.addEventListener('input', function() {
          const username = this.value.trim();
          if (username.length >= 3) {
            showFloatingMessage('Username looks good!', 'success', '‚úÖ', 2000);
          }
        });
        
        // Password input validation
        const passwordInput = document.getElementById('password');
        passwordInput.addEventListener('input', function() {
          const password = this.value;
          if (password.length >= 6) {
            showFloatingMessage('Password entered', 'success', 'üîí', 2000);
          }
        });
        
        // Feature cards animation
        const featureCards = document.querySelectorAll('.feature-card');
        featureCards.forEach((card, index) => {
          card.style.animationDelay = `${index * 0.1}s`;
          card.classList.add('animate-fade-in');
          
          // Subtle floating animation
          setInterval(() => {
            if (!card.matches(':hover')) {
              card.style.transform = `translateY(${Math.sin(Date.now() * 0.001 + index) * 1}px)`;
            }
          }, 50);
        });
        
        // Card hover effects
        const loginCard = document.querySelector('.glass-card');
        loginCard.addEventListener('mouseenter', function() {
          this.style.transform = 'translateY(-4px) scale(1.01)';
          this.style.borderColor = 'rgba(59, 130, 246, 0.4)';
          this.style.boxShadow = 'var(--shadow-2xl), var(--shadow-glow)';
        });
        
        loginCard.addEventListener('mouseleave', function() {
          this.style.transform = 'translateY(0) scale(1)';
          this.style.borderColor = 'rgba(255, 255, 255, 0.15)';
          this.style.boxShadow = 'var(--shadow-xl)';
        });
        
        // Welcome message
        setTimeout(() => {
          showFloatingMessage('Welcome to TaskFlow!', 'info', 'üëã');
        }, 1000);
        
        // Check for existing messages and show floating versions
        <% if (message) { %>
        setTimeout(() => {
          showFloatingMessage('<%= message %>', 'error', '‚ö†Ô∏è', 6000);
        }, 500);
        <% } %>
        
        <% if (success_msg) { %>
        setTimeout(() => {
          showFloatingMessage('<%= success_msg %>', 'success', '‚úÖ', 6000);
        }, 500);
        <% } %>
        
        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
          // Enter key to submit form
          if (e.key === 'Enter' && !e.shiftKey && !e.ctrlKey && !e.altKey) {
            const activeElement = document.activeElement;
            if (activeElement.tagName === 'INPUT') {
              form.submit();
            }
          }
          
          // Escape key to clear form
          if (e.key === 'Escape') {
            document.getElementById('username').value = '';
            document.getElementById('password').value = '';
            showFloatingMessage('Form cleared', 'info', 'üßπ', 2000);
          }
        });
        
        // Auto-focus username field
        setTimeout(() => {
          document.getElementById('username').focus();
        }, 500);
        
        // Smooth transitions
        const style = document.createElement('style');
        style.textContent = `
          .input-icon {
            transition: all var(--transition-normal);
          }
        `;
        document.head.appendChild(style);
      });
    </script>
  </body>
</html>

