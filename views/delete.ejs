<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Delete Task - TaskFlow</title>
    <link rel="stylesheet" href="/css/elegant-styles.css" />
    <style>
      .floating-message {
        position: fixed;
        top: 2rem;
        right: 2rem;
        background: rgba(15, 15, 26, 0.95);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--radius-xl);
        padding: var(--space-4) var(--space-6);
        color: var(--dark-text);
        font-weight: 600;
        box-shadow: var(--shadow-2xl), var(--shadow-glow);
        transform: translateX(400px);
        transition: all var(--transition-bounce);
        z-index: var(--z-toast);
        max-width: 320px;
      }
      
      .floating-message.show {
        transform: translateX(0);
      }
      
      .floating-message.success {
        border-color: rgba(16, 185, 129, 0.4);
        box-shadow: var(--shadow-2xl), 0 0 30px rgba(16, 185, 129, 0.3);
      }
      
      .floating-message.error {
        border-color: rgba(239, 68, 68, 0.4);
        box-shadow: var(--shadow-2xl), 0 0 30px rgba(239, 68, 68, 0.3);
      }
      
      .floating-message.warning {
        border-color: rgba(245, 158, 11, 0.4);
        box-shadow: var(--shadow-2xl), 0 0 30px rgba(245, 158, 11, 0.3);
      }
      
      .warning-card {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.3);
        backdrop-filter: blur(15px);
        position: relative;
        overflow: hidden;
      }
      
      .warning-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #ef4444, #dc2626);
      }
      
      .confirmation-input {
        background: var(--dark-surface);
        border: 2px solid rgba(239, 68, 68, 0.3);
        text-align: center;
        font-family: var(--font-mono);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all var(--transition-normal);
      }
      
      .confirmation-input:focus {
        border-color: var(--error-500);
        box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.15), var(--shadow-lg);
        transform: scale(1.02);
      }
      
      .confirmation-input.valid {
        border-color: var(--success-500);
        box-shadow: 0 0 0 4px rgba(16, 185, 129, 0.15), var(--shadow-lg);
        background: rgba(16, 185, 129, 0.05);
        transform: scale(1.02);
      }
      
      .danger-zone {
        background: var(--gradient-dark);
        border: 1px solid rgba(239, 68, 68, 0.3);
        position: relative;
        overflow: hidden;
      }
      
      .danger-zone::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #ef4444, #dc2626, #ef4444);
        background-size: 200% 100%;
        animation: dangerPulse 2s ease-in-out infinite;
      }
      
      @keyframes dangerPulse {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
      }
      
      .task-preview {
        background: rgba(26, 26, 46, 0.6);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: var(--radius-xl);
        padding: var(--space-6);
        transition: all var(--transition-normal);
        position: relative;
        overflow: hidden;
      }
      
      .task-preview::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(239, 68, 68, 0.1), transparent);
        transition: left var(--transition-slow);
      }
      
      .task-preview:hover::before {
        left: 100%;
      }
      
      .warning-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: var(--space-4);
        margin: var(--space-6) 0;
      }
      
      .warning-item {
        background: rgba(26, 26, 46, 0.4);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(239, 68, 68, 0.2);
        border-radius: var(--radius-lg);
        padding: var(--space-4);
        text-align: center;
        transition: all var(--transition-normal);
        position: relative;
        overflow: hidden;
      }
      
      .warning-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(239, 68, 68, 0.1), transparent);
        transition: left var(--transition-slow);
      }
      
      .warning-item:hover::before {
        left: 100%;
      }
      
      .warning-item:hover {
        transform: translateY(-2px) scale(1.02);
        border-color: rgba(239, 68, 68, 0.4);
        box-shadow: var(--shadow-lg), 0 0 20px rgba(239, 68, 68, 0.2);
      }
      
      .alternative-actions {
        background: var(--gradient-dark);
        border: 1px solid rgba(255, 255, 255, 0.15);
        position: relative;
        overflow: hidden;
      }
      
      .alternative-actions::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: var(--gradient-tertiary);
      }
      
      .confirmation-modal {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(10px);
        z-index: var(--z-modal);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: var(--space-6);
        opacity: 0;
        visibility: hidden;
        transition: all var(--transition-normal);
      }
      
      .confirmation-modal.show {
        opacity: 1;
        visibility: visible;
      }
      
      .modal-content {
        background: var(--gradient-dark);
        border: 1px solid rgba(239, 68, 68, 0.3);
        border-radius: var(--radius-2xl);
        padding: var(--space-8);
        text-align: center;
        max-width: 400px;
        width: 100%;
        position: relative;
        overflow: hidden;
        transform: scale(0.9);
        transition: transform var(--transition-bounce);
      }
      
      .confirmation-modal.show .modal-content {
        transform: scale(1);
      }
      
      .modal-content::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #ef4444, #dc2626);
      }
      
      .pulse-danger {
        animation: pulseDanger 2s ease-in-out infinite;
      }
      
      @keyframes pulseDanger {
        0%, 100% {
          box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.4);
        }
        50% {
          box-shadow: 0 0 0 20px rgba(239, 68, 68, 0);
        }
      }
    </style>
  </head>
  <body>
    
    <!-- Navigation -->
    <nav class="navbar">
      <div class="container">
        <div class="navbar-content">
          <a href="/" class="navbar-brand">
            <div class="logo" style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);">‚ö†Ô∏è</div>
            <span class="text-gradient-hologram">TaskFlow</span>
          </a>
          
          <div class="navbar-nav">
            <a href="/" class="btn btn-secondary btn-sm">
              <span>‚Üê</span> Back to Safety
            </a>
          </div>
        </div>
      </div>
    </nav>

    <div class="container">
      <!-- Warning Header -->
      <section class="danger-zone warning-card p-12 mb-8 mt-8 animate-fade-in rounded-2xl">
        <div class="text-center">
          <div class="logo mb-6 pulse-danger" style="width: 100px; height: 100px; font-size: 2.5rem; margin: 0 auto; background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);">
            ‚ö†Ô∏è
          </div>
          <h1 class="text-4xl font-bold text-danger mb-4 font-display">
            Danger Zone
          </h1>
          <p class="text-xl text-secondary">
            You are about to permanently delete a task
          </p>
        </div>
      </section>

      <!-- Delete Confirmation -->
      <div class="max-w-3xl mx-auto">
        <div class="card animate-slide-in">
          <div class="p-8 border-b border-gray-700">
            <h2 class="text-2xl font-bold text-primary">Confirm Deletion</h2>
            <p class="text-muted mt-2">This action cannot be undone</p>
          </div>
          
          <div class="p-8 space-y-8">
            
            <!-- Task Preview -->
            <div class="task-preview">
              <h3 class="text-lg font-semibold text-primary mb-4">Task to be deleted:</h3>
              <div class="warning-card p-6 rounded-lg">
                <h4 class="text-xl font-bold text-danger mb-2">
                  "<%= task.title %>"
                </h4>
                <p class="text-secondary">
                  <%= task.description %>
                </p>
              </div>
            </div>

            <!-- Warning Message -->
            <div class="warning-card p-6 rounded-lg">
              <div class="text-center">
                <h3 class="text-xl font-bold text-danger mb-4">
                  ‚ö†Ô∏è Permanent Action Warning
                </h3>
                <p class="text-secondary mb-6">
                  This action cannot be undone. The task and all its data will be permanently removed from the system.
                </p>
                <div class="warning-grid">
                  <div class="warning-item">
                    <div class="text-danger text-3xl mb-2">üóëÔ∏è</div>
                    <div class="text-sm text-primary font-semibold">Permanent Deletion</div>
                    <div class="text-xs text-muted mt-1">Cannot be recovered</div>
                  </div>
                  <div class="warning-item">
                    <div class="text-danger text-3xl mb-2">‚ùå</div>
                    <div class="text-sm text-primary font-semibold">No Backup</div>
                    <div class="text-xs text-muted mt-1">Data lost forever</div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Confirmation Form -->
            <form action="/tasks/delete/<%= task._id %>" method="POST" id="deleteForm">
              <div class="text-center mb-6">
                <p class="text-secondary mb-4">
                  Type <strong class="text-danger font-bold">"DELETE"</strong> to confirm:
                </p>
                <input
                  type="text"
                  id="confirmInput"
                  class="confirmation-input form-input w-full max-w-xs mx-auto focus-ring"
                  placeholder="TYPE DELETE HERE"
                  autocomplete="off"
                />
              </div>

              <div class="flex flex-col sm:flex-row gap-6 justify-center">
                <button
                  type="submit"
                  class="btn btn-danger btn-lg hover-scale"
                  id="deleteButton"
                  disabled
                >
                  <span>üóëÔ∏è</span> Confirm Delete
                </button>
                
                <a href="/" class="btn btn-secondary btn-lg hover-scale text-center">
                  <span>üõ°Ô∏è</span> Cancel & Go Back
                </a>
              </div>
            </form>
          </div>
        </div>

        <!-- Alternative Actions -->
        <div class="alternative-actions card mt-8 animate-fade-in stagger-2">
          <div class="p-6 border-b border-gray-700">
            <h3 class="text-lg font-semibold text-primary text-center">
              Alternative Actions
            </h3>
          </div>
          <div class="p-6">
            <div class="grid grid-1 md:grid-2 gap-4">
              <a href="/tasks/<%= task._id %>/edit" class="btn btn-primary w-full hover-scale">
                <span>‚úèÔ∏è</span> Edit Instead
              </a>
              <a href="/readmore/<%= task._id %>/" class="btn btn-secondary w-full hover-scale">
                <span>üëÅÔ∏è</span> View Details
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="confirmation-modal" id="confirmationModal">
      <div class="modal-content">
        <div class="logo mb-6 pulse-danger" style="width: 80px; height: 80px; font-size: 2rem; margin: 0 auto; background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);">
          ‚ö†Ô∏è
        </div>
        <h3 class="text-2xl font-bold text-primary mb-4">Final Confirmation</h3>
        <p class="text-secondary mb-6">Are you absolutely sure you want to delete this task?</p>
        <div class="flex gap-4">
          <button id="confirmDelete" class="btn btn-danger flex-1 hover-scale">
            Yes, Delete
          </button>
          <button id="cancelDelete" class="btn btn-secondary flex-1 hover-scale">
            Cancel
          </button>
        </div>
      </div>
    </div>

    <!-- Floating Message Container -->
    <div id="floatingMessage" class="floating-message">
      <div class="flex items-center gap-3">
        <span id="messageIcon" class="text-xl"></span>
        <span id="messageText" class="text-sm"></span>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const confirmInput = document.getElementById('confirmInput');
        const deleteButton = document.getElementById('deleteButton');
        const deleteForm = document.getElementById('deleteForm');
        const confirmationModal = document.getElementById('confirmationModal');
        
        function showFloatingMessage(message, type = 'info', icon = 'üí°', duration = 4000) {
          const floatingMessage = document.getElementById('floatingMessage');
          const messageIcon = document.getElementById('messageIcon');
          const messageText = document.getElementById('messageText');
          
          messageIcon.textContent = icon;
          messageText.textContent = message;
          
          floatingMessage.className = `floating-message ${type}`;
          floatingMessage.classList.add('show');
          
          setTimeout(() => {
            floatingMessage.classList.remove('show');
          }, duration);
        }
        
        // Enable delete button only when "DELETE" is typed
        confirmInput.addEventListener('input', function() {
          const value = this.value.trim().toUpperCase();
          if (value === 'DELETE') {
            deleteButton.disabled = false;
            deleteButton.style.opacity = '1';
            deleteButton.style.cursor = 'pointer';
            this.classList.add('valid');
            showFloatingMessage('Confirmation text entered correctly', 'warning', '‚ö†Ô∏è', 2000);
          } else {
            deleteButton.disabled = true;
            deleteButton.style.opacity = '0.5';
            deleteButton.style.cursor = 'not-allowed';
            this.classList.remove('valid');
          }
        });
        
        // Add confirmation dialog
        deleteForm.addEventListener('submit', function(e) {
          e.preventDefault();
          
          if (confirmInput.value.trim().toUpperCase() !== 'DELETE') {
            // Shake animation for invalid input
            confirmInput.style.animation = 'shake 0.5s ease-in-out';
            showFloatingMessage('Please type DELETE to confirm', 'error', '‚ùå');
            setTimeout(() => {
              confirmInput.style.animation = '';
            }, 500);
            return;
          }
          
          // Show confirmation modal
          confirmationModal.classList.add('show');
          showFloatingMessage('Final confirmation required', 'warning', '‚ö†Ô∏è');
        });
        
        // Handle modal actions
        document.getElementById('confirmDelete').addEventListener('click', () => {
          showFloatingMessage('Deleting task...', 'error', 'üóëÔ∏è');
          // Actually submit the form
          const realForm = document.createElement('form');
          realForm.action = deleteForm.action;
          realForm.method = deleteForm.method;
          realForm.style.display = 'none';
          document.body.appendChild(realForm);
          realForm.submit();
        });
        
        document.getElementById('cancelDelete').addEventListener('click', () => {
          confirmationModal.classList.remove('show');
          showFloatingMessage('Deletion cancelled', 'success', 'üõ°Ô∏è');
        });
        
        // Close on backdrop click
        confirmationModal.addEventListener('click', function(e) {
          if (e.target === confirmationModal) {
            confirmationModal.classList.remove('show');
            showFloatingMessage('Deletion cancelled', 'success', 'üõ°Ô∏è');
          }
        });
        
        // Enhanced input focus effects
        confirmInput.addEventListener('focus', function() {
          this.style.transform = 'scale(1.02)';
          this.style.borderColor = 'var(--error-500)';
          this.style.boxShadow = '0 0 0 4px rgba(239, 68, 68, 0.15), var(--shadow-lg)';
        });
        
        confirmInput.addEventListener('blur', function() {
          if (!this.classList.contains('valid')) {
            this.style.transform = 'scale(1)';
          }
        });
        
        // Card hover effects
        const cards = document.querySelectorAll('.task-preview, .warning-item');
        cards.forEach(card => {
          card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px) scale(1.02)';
            this.style.borderColor = 'rgba(239, 68, 68, 0.4)';
            this.style.boxShadow = 'var(--shadow-xl), 0 0 20px rgba(239, 68, 68, 0.2)';
          });
          
          card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
            this.style.borderColor = 'rgba(255, 255, 255, 0.1)';
            this.style.boxShadow = '';
          });
        });
        
        // Welcome message
        setTimeout(() => {
          showFloatingMessage('‚ö†Ô∏è You are in the danger zone!', 'warning', '‚ö†Ô∏è');
        }, 1000);
        
        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
          // Escape to cancel
          if (e.key === 'Escape') {
            if (confirmationModal.classList.contains('show')) {
              confirmationModal.classList.remove('show');
              showFloatingMessage('Deletion cancelled', 'success', 'üõ°Ô∏è');
            } else {
              window.location.href = '/';
            }
          }
        });
        
        // Add shake animation
        const style = document.createElement('style');
        style.textContent = `
          @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
          }
        `;
        document.head.appendChild(style);
      });
    </script>
  </body>
</html>

